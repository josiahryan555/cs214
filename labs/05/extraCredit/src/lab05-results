Script started on 2021-03-05 13:06:48-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> (+1    1 2 3 4 5)
15
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 13:07:40-0500
Script started on 2021-03-05 13:08:46-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> (fn [x] (+ x x))^[[D        )
#object[user$eval136$fn__137 0x6d467c87 "user$eval136$fn__137@6d467c87"]
user=> ((fn [x] (+ xx  d x) ) 21)
42
user=> ((fn [x y] (+ x x   (* x x) (* y y))) 3 4)
25
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 13:14:14-0500
Script started on 2021-03-05 13:26:15-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> ((fn [x y z] (max (Math/abs x) (Math/abs y) (Math/abs z))) 1 4 -7)
7
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 13:26:38-0500
Script started on 2021-03-05 13:35:20-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> ((fn [x y z] (+ x y z)) 5 10 ((fn [x y z] (+ x y z)) 5 10 15))
45
user=> ((fn [x] (nil? x) ) 20)
false
user=> ((fn [] 17.2))
17.2
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 13:37:51-0500
Script started on 2021-03-05 13:40:41-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> (def triple (fn [x] (* x 3)))
#'user/triple
user=> (triple 4)
12
user=> 
user=> (defn triple [x] (* x 3))
#'user/triple
user=> (triple 3)
9
user=> (#(* % 3) 4)
12
user=> #(+ (* %1 %2 1) (* %2 %2))^[[D^[[D                                (# #(+ (* %1 %1) (* %2 %2)) 3 4)
25
user=> (def sum2Squares #(+ (* %1 %1) (* %2 %2)))
#'user/sum2Squares
user=> (sum2Squares 3 4)
25
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 13:47:20-0500
Script started on 2021-03-05 13:50:41-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> (def squareSquare (fn [x] (* x x x x)))
#'user/squareSquare
user=> (squareSquare 2)
16
user=> (squareSquare -2)
16
user=> s (squareSquare 3)
81
user=> (squareSquaer  re -3)
81
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 13:51:32-0500
Script started on 2021-03-05 13:58:34-0500
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ clojure
Clojure 1.10.1
user=> (map inc [1 2 3 4])
(2 3 4 5)
user=> (map - [1 2 3 4])
(-1 -2 -3 -4)
user=> (map - [1 2 3 4] [1 2 3 4])
(0 0 0 0)
user=> (map even? [1 2 3 4])
(false true false true)
user=> (map str ["a" "b" "c"] ["A" "B" "C"])
("aA" "bB" "cC")
user=> (map count [[11] [11 22] [11 22 33]])
(1 2 3)
user=> (map + [1 2 3 4] [1 2 3 4])
(2 4 6 8)
user=> (map * [1 2 3 4] [1 2 3 4])
(1 4 9 16)
user=> (Math/abs -3)
3
user=> (map Math/abs [-1 2 -3 4 -5])
Syntax error compiling at (REPL:1:1).
Unable to find static field: abs in class java.lang.Math
user=> (map (fn [x] (if (< x 0) (- x) x)) [-1 2 -3 4 -5])
(1 2 3 4 5)
user=> (defn subtract-n [n sequence] (map (fn [x] (- x n)) sequence) )
#'user/subtract-n
user=> (subtract-n 2 [5 6 7 8])
(3 4 5 6)
user=> (filter odd? [1 2 3 4])
(1 3)
user=> (filter even? [1 2 3 4])
(2 4)
user=> (filter neg? [1 2 3 4])
()
user=> (filter neg? [-1 1 -2 2 -3 3])
(-1 -2 -3)
user=> (filter pos?  [-1 1 -2 2 -3 3])
(1 2 3)
user=> ^^?  (filter (fn [x] (and (pos? x) (even? x))) [-1 1 -2 2 -3 3 -4 4])
(2 4)
user=> (filter (fn [x] (and (neg? x) (odd? x))) [-1 1 -2 2 -3 3 -4 4])
(-1 -3)
user=> (filter (fn [x] (or (neg? x) (odd? x))) [-1 1 -2 2 -3 3 -4 4])
(-1 1 -2 -3 3 -4)
user=> 
]0;jr232@gold14: ~/Desktop/cs214/labs/05/extraCredit/src[01;32mjr232@gold14[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit/src[00m$ exit

Script done on 2021-03-05 14:14:49-0500
Script started on 2021-03-05 17:58:48-0500
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ clojure
Clojure 1.10.1
user=> (map (fn [x] (* x -1)) [1 -2 3 -4 5 -6 7 -8 9])
(-1 2 -3 4 -5 6 -7 8 -9)
user=> 
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ exit

Script done on 2021-03-05 17:58:58-0500
Script started on 2021-03-05 18:07:49-0500
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ clojure
Clojure 1.10.1
user=> (reduce + [1 2 3])
6
user=> (reduce + '(1 2 3))
6
user=> (reduce max [1 2 3])
3
user=> (reduce conj [1 2 3] [4 5 6])
[1 2 3 4 5 6]
user=> ^^?  (reduce + [1 2 3 4 5])
15
user=> (reduce + 1 [2 3 4 5])
15
user=> (reduce + 1 '(2 3 4 5))
15
user=> (reduce max 5 [4 3 2 1])
5
user=> (reduce bit-or [1 2 3 4])
7
user=> (reduce str ["a" "b" "c"])
"abc"
user=> (reduce + 1 2 [3 4 5])
Execution error (ArityException) at user/eval21 (REPL:1).
Wrong number of args (4) passed to: clojure.core/reduce
user=> (reduce + 1 '(2 3 4) 5)
Execution error (ArityException) at user/eval23 (REPL:1).
Wrong number of args (4) passed to: clojure.core/reduce
user=> (defn csv [seq]  (reduce (fn [a b] (str a "," b)) seq) )
#'user/csv
user=> (csv [11 22 33])
"11,22,33"
user=> (defn totalItems [seqOfSeqs] (reduce + (map count seqOfSeqs)) )
#'user/totalItems
user=> ^^?  (totalItems [["Ann"] ["Bob" "Chris"] ["Dan" "Eve" "Fred"]])
6
user=> 
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ exit

Script done on 2021-03-05 18:17:39-0500
Script started on 2021-03-05 18:24:31-0500
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ clojure
Clojure 1.10.1
user=> (defn sumSquares [sequence] (reduce + (map (fn [x] (* x x)) sequence)))
#'user/sumSquares
user=> (sumSquares '(1 2 3))
14
user=> (sumSquares '(1 2 3 4 5))
55
user=> (sumSquares [-1 -2 -3 0 1])
15
user=> 
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ exit

Script done on 2021-03-05 18:25:35-0500
Script started on 2021-03-05 18:27:39-0500
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ clojure
Clojure 1.10.1
user=> (defn incMaker [incValue] (fn [x] (+ x incValue) ))
#'user/incMaker
user=> (def inc5 (incMaker 5))
#'user/inc5
user=> (inc5 10)
15
user=> (inc3   5 35)
40
user=> (defn greetingBuilder [greeting] (fn [visitor] (str greeting ", " visitor "!") ))
#'user/greetingBuilder
user=> (def csGreeting (greetingBuilder "Welcome to CS 214"))
#'user/csGreeting
user=> (def englishGreeting (greetingBuilder "Hello"))
#'user/englishGreeting
user=> (def frenchGreeting (greetingBuilder "Bonjour"))
#'user/frenchGreeting
user=> (csGreeting "Ann")
"Welcome to CS 214, Ann!"
user=> (englishGreeting "Chris")
"Hello, Chris!"
user=> (frenchGreeting "Chris")
"Bonjour, Chris!"
user=> 
]0;jr232@goldvm05: ~/Desktop/cs214/labs/05/extraCredit[01;32mjr232@goldvm05[00m:[01;34m~/Desktop/cs214/labs/05/extraCredit[00m$ exit

Script done on 2021-03-05 18:35:43-0500
