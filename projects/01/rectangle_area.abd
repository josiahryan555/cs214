-- rectangle_area.adb computes the area of a rectangle.
--
-- Input: The length and width of the rectangle.
-- Precondition: The length and width is a positive number.
-- Output: The area of the rectangle.
--
-- Begun by: Prof. Adams, CS 214 at Calvin College.
-- Completed by: Josiah Ryan
-- Date: Feb/10/21
----------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO;
use  Ada.Text_IO, Ada.Float_Text_IO;

procedure rectangle_area is

   length, width, area : float; 

   -- function rectangleArea computes a rectangle's area, given its length and width
   -- Parameter: l, w, a float
   -- Precondition: l & w >= 0.0
   -- Return: the area of the rectangle whose width and height are w and h
   ----------------------------------------------------
   function rectangleArea(l, w: in float) return float is -- declares a function 
   begin  -- starts the execution part of the function
      return l * w; --calculates and returns area
   end rectangleArea; --end of function

begin    -- start of 'main'
   New_Line; -- adds a line of white space
   Put_Line("To compute the area of a rectangle,"); -- prints that string, and goes to a new line
   Put("enter its length: "); -- prints that string, but doesnt go to a new line
   Get(length);  -- grabs the user inputed value and stores it in 'length'
   Put("enter its width: "); -- prints that string, but doesnt go to a new line
   Get(width);  -- grabs the user inputed value and stores it in 'width'

   area := rectangleArea(length, width); -- calculates area and stores it in area

   New_Line;  -- adds a line of white space
   Put("The rectangle's area is "); -- prints line
   Put(area);  -- prints area
   New_Line; New_Line; -- adds 2 lines of white space

   Put("The rectangle's area is "); -- prints that string
   Put(area, 1, 15, 0); -- outputs the area formated to have at least one digit before the decimal place, and 15 after it 
   New_Line; New_Line; -- adds 2 lines of white space
end rectangle_area; -- end of 'main'

